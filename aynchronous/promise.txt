https://developer.mozilla.org/ko/docs/Web/JavaScript/Reference/Global_Objects/Promise
프로미스는 비동기 연산이 종료된 이후에 결과값과 실패 사유를 처리하기 위한 처리기를 연결할 수 있다.
프로미스는 대기, 이행, 거부 상태가 존재한다.
promise ->이행(fulfilled) : 연산이 성공적으로 완료.  -> async actions
        ->거부(reject) : 연산이 실패함.             ->error handling
                                                   or ->promise                     
생성자 : promise()
정적 메서드 : .all, .allsettled

-대기 중인 프로미스는 값과 함께 이행할 수도, 어떤 이유(오류)로 인해 거부될 수도 있습니다. 이행이나 거부될 때, 프로미스의 then 메서드에 의해 대기열(큐)에 추가된 처리기들이 호출됩니다. 이미 이행했거나 거부된 프로미스에 처리기를 연결해도 호출되므로, 비동기 연산과 처리기 연결 사이에 경합 조건은 없습니다.
이의미 생각해보기.

-정적 메서드
promise.then은 마이크로태스크큐에 추가된다.